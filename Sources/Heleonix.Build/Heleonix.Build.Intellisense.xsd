<?xml version="1.0" encoding="utf-8"?>

<!--
The MIT License (MIT)

Copyright (c) 2015-2016 Heleonix - Hennadii Lutsyshyn

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->

<!--
Example custom itemtype with particular meta-data required
<xs:element name="MyItem" substitutionGroup="msb:Item">
  <xs:complexType>
    <xs:complexContent>
      <xs:extension base="msb:SimpleItemType">
        <xs:sequence maxOccurs="1">
          <xs:choice>
            <xs:element name="MyMetaData" type="xs:string"/>
          </xs:choice>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:element>

Example custom itemtype with NO meta-data
<xs:element name="MySimpleItem" type="msb:SimpleItemType" substitutionGroup="msb:Item"/>

Example custom itemtype with ANY meta-data
<xs:element name="MyFlexibleItem" type="msb:GenericItemType" substitutionGroup="msb:Item"/>

Example custom property that allows string content only
<xs:element name="MySimpleProperty" type="msb:StringPropertyType" substitutionGroup="msb:Property"/>

Example custom task with single required parameter
<xs:element name="MyTask" substitutionGroup="msb:Task">
  <xs:complexType>
    <xs:complexContent>
      <xs:extension base="msb:TaskType">
        <xs:attribute name="MyParameter" type="xs:boolean" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:element>
-->

<xs:schema xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003"
           elementFormDefault="qualified"
           targetNamespace="http://schemas.microsoft.com/developer/msbuild/2003"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include
    schemaLocation="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Xml\Schemas\1033\MSBuild\Microsoft.Build.Commontypes.xsd"/>

  <!--Custom types-->
  <xs:simpleType name="Hxb-CIType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Jenkins"/>
      <xs:enumeration value="TeamCity"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Hxb-SCMType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Git"/>
      <xs:enumeration value="Svn"/>
    </xs:restriction>
  </xs:simpleType>

  <!--Tasks-->
  <xs:element name="Heleonix.Build.Tasks.DirectoryClean" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Deletes contents of a directory, but not the directory itself.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="DirectoriesPath" use="required">
            <xs:annotation>
              <xs:documentation>Directories to clean.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="CleanedDirectoriesPath">
            <xs:annotation>
              <xs:documentation>[Output] Gets or sets the cleaned directories paths.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="FailedDirectoriesPath">
            <xs:annotation>
              <xs:documentation>[Output] Gets or sets the failed to clean directories paths.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Heleonix.Build.Tasks.FileUpdate" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Updates a file with specified regular expression and content.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="FilePath" use="required">
            <xs:annotation>
              <xs:documentation>The file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="RegEx" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The .NET regular expression to find content to replace.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="RegExOptions" type="xs:string">
            <xs:annotation>
              <xs:documentation>The .NET regular expression options.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Replacement" type="xs:string">
            <xs:annotation>
              <xs:documentation>Content to replace with.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Heleonix.Build.Tasks.FxCop" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Runs the FxCop.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="FxCopExePath" use="required">
            <xs:annotation>
              <xs:documentation>The FxCop executable path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="AnalysisResultsFilePath" use="required">
            <xs:annotation>
              <xs:documentation>The analysis results file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="IsVerbose" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A value indicating whether the FxCop is verbose.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TargetsTypes" type="xs:string">
            <xs:annotation>
              <xs:documentation>The comma-separated types to analyze.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="RulesPath">
            <xs:annotation>
              <xs:documentation>The location of rule libraries to load.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ProjectFilePath">
            <xs:annotation>
              <xs:documentation>The file path of an FxCop project file.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TargetsPath">
            <xs:annotation>
              <xs:documentation>The files to analyze.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="AnalysisResultsXslFilePath">
            <xs:annotation>
              <xs:documentation>The analysis results XSL file that is referenced in the processing instruction.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="DependenciesDirectoriesPath">
            <xs:annotation>
              <xs:documentation>The dependencies directories paths to search for target assembly dependencies.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="RulesetFilePath">
            <xs:annotation>
              <xs:documentation>The ruleset file path to be used for the analysis.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="DictionaryFilePath">
            <xs:annotation>
              <xs:documentation>The dictionary file path to be used by spelling rules.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="CriticalErrors" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The critical errors count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Errors" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The errors count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="CriticalWarnings" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The critical warnings count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Warnings" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The warnings count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Informational" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The informational messages count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Heleonix.Build.Tasks.GitLog" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Retrieves the Git log.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="GitExePath" use="required">
            <xs:annotation>
              <xs:documentation>The Git executable path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="RepositoryPath" use="required">
            <xs:annotation>
              <xs:documentation>The file or directory path to retrieve log for.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MaxCount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The maximum count of commits to retrieve from the log.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="SinceDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date to start retrieval of commits from.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="UntilDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date to stop retrieval of commits on.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Commits">
            <xs:annotation>
              <xs:documentation>[Output] The commits.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Heleonix.Build.Tasks.ItemFilter" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Filters items using regular expressions.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="Inputs" use="required">
            <xs:annotation>
              <xs:documentation>Items to check.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="RegEx" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The .NET regular expression to filter items by.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="RegExOptions" type="xs:string">
            <xs:annotation>
              <xs:documentation>The .NET regular expression options. Default is "IgnoreCase".</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MetadataName" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the metadata to apply filter to. Default is "FullPath".</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Negative" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Determines whether the regular expression is applied as negative expression.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Outputs">
            <xs:annotation>
              <xs:documentation>[Output] The filtered items.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Heleonix.Build.Tasks.NugetPack" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Runs the Nuget pack command.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="NugetExePath" use="required">
            <xs:annotation>
              <xs:documentation>The Nuget executable path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="NuspecFilePath" use="required">
            <xs:annotation>
              <xs:documentation>The nuspec file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ProjectFilePath" use="required">
            <xs:annotation>
              <xs:documentation>The project file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="PackageDirectoryPath">
            <xs:annotation>
              <xs:documentation>The output package directory path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="IncludeReferencedProjects" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A value indicating whether to include referenced projects.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ExcludeEmptyDirectories" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A value indicating whether to exclude empty directories.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Verbosity" type="xs:string">
            <xs:annotation>
              <xs:documentation>The verbosity of the command.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="PackageFilePath">
            <xs:annotation>
              <xs:documentation>[Output] The output package file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Heleonix.Build.Tasks.NugetPush" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Runs the Nuget push command.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="NugetExePath" use="required">
            <xs:annotation>
              <xs:documentation>The Nuget executable path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="PackageFilePath" use="required">
            <xs:annotation>
              <xs:documentation>The package file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ApiKey" type="xs:string">
            <xs:annotation>
              <xs:documentation>The API key.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="SourcePath" type="xs:string">
            <xs:annotation>
              <xs:documentation>The source path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ConfigFilePath">
            <xs:annotation>
              <xs:documentation>The configuration file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Verbosity" type="xs:string">
            <xs:annotation>
              <xs:documentation>The verbosity of the command.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Heleonix.Build.Tasks.NUnit" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Runs the NUnit.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="NUnitConsoleExePath" use="required">
            <xs:annotation>
              <xs:documentation>The NUnit console executable path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="NUnitProjectOrTestsFilesPath" use="required">
            <xs:annotation>
              <xs:documentation>The NUnit project or tests files path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TestsResultsFilePath">
            <xs:annotation>
              <xs:documentation>The NUnit tests results file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TestsListFilePath">
            <xs:annotation>
              <xs:documentation>The tests list file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TestsParameters" type="xs:string">
            <xs:annotation>
              <xs:documentation>The tests parameters, specified in the form name=value.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TestsFilter" type="xs:string">
            <xs:annotation>
              <xs:documentation>A tests filter to filter tests to run.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TestsOutputFilePath">
            <xs:annotation>
              <xs:documentation>The tests output file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ErrorsFilePath">
            <xs:annotation>
              <xs:documentation>The errors file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="AgentsNumber" type="xs:int">
            <xs:annotation>
              <xs:documentation>The agents number.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="StopOnErrorOrFailedTest" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A value indicating whether stop on first first error or first failed test.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="UseTeamCityServiceMessages" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A value indicating whether to use TeamCity service messages.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Framework" type="xs:string">
            <xs:annotation>
              <xs:documentation>The framework to use for tests. Examples: "mono", "net-4.5", "v4.0", "2.0", "mono-4.0".</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TraceLevel" type="xs:string">
            <xs:annotation>
              <xs:documentation>The trace level.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TestCases" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The count of test cases.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Total" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The total count of tests.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Passed" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The count of passed tests.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Failed" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The count of failed tests.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Inconclusive" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The count of inconclusive tests.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Skipped" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The count of skipped tests.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Asserts" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The count of asserts.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="StartTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>[Output] The start time.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="EndTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>[Output] The end time.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Duration" type="xs:float">
            <xs:annotation>
              <xs:documentation>[Output] The duration of tests running.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Heleonix.Build.Tasks.OpenCover" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Runs the OpenCover.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="OpenCoverExePath" use="required">
            <xs:annotation>
              <xs:documentation>The OpenCover executable path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Target" use="required">
            <xs:annotation>
              <xs:documentation>The target executable path with command line arguments and its "Type" in metadata.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="CoverageResultsFilePath" use="required">
            <xs:annotation>
              <xs:documentation>The coverage results output file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MinClassCoverage" type="xs:float">
            <xs:annotation>
              <xs:documentation>The minimum class coverage, in range: 0% - 100%.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MinMethodCoverage" type="xs:float">
            <xs:annotation>
              <xs:documentation>The minimum method coverage, in range: 0% - 100%.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MinBranchCoverage" type="xs:float">
            <xs:annotation>
              <xs:documentation>The minimum branch coverage, in range: 0% - 100%.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MinLineCoverage" type="xs:float">
            <xs:annotation>
              <xs:documentation>The minimum line coverage, in range: 0% - 100%.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ExcludeByAttributeFilters" type="xs:string">
            <xs:annotation>
              <xs:documentation>The filters to exclude code from coverage by attribute in format: Name*;*Attribute.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Filters" type="xs:string">
            <xs:annotation>
              <xs:documentation>The filters of binaries to cover in format: +[ModuleName*]*ClassName -[ModuleName*]*ClassName.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="PdbSearchDirectoriesPath">
            <xs:annotation>
              <xs:documentation>The PDB search directories path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ShowUnvisited" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Show unvisited methods and classes after coverage finishes and results are presented.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MaxVisitCount" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum visits count. Limiting can improve performance.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TotalLines" type="xs:long">
            <xs:annotation>
              <xs:documentation>[Output] The total lines count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="VisitedLines" type="xs:long">
            <xs:annotation>
              <xs:documentation>[Output] The visited lines count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TotalBranches" type="xs:long">
            <xs:annotation>
              <xs:documentation>[Output] The total branches count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="VisitedBranches" type="xs:long">
            <xs:annotation>
              <xs:documentation>[Output] The visited branches count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TotalClasses" type="xs:long">
            <xs:annotation>
              <xs:documentation>[Output] The total classes count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="VisitedClasses" type="xs:long">
            <xs:annotation>
              <xs:documentation>[Output] The visited classes count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TotalMethods" type="xs:long">
            <xs:annotation>
              <xs:documentation>[Output] The total methods count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="VisitedMethods" type="xs:long">
            <xs:annotation>
              <xs:documentation>[Output] The visited methods count.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MinCyclomaticComplexity" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The minimum cyclomatic complexity.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MaxCyclomaticComplexity" type="xs:int">
            <xs:annotation>
              <xs:documentation>[Output] The maximum cyclomatic complexity.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ClassCoverage" type="xs:float">
            <xs:annotation>
              <xs:documentation>[Output] The class coverage, in range: 0% - 100%.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MethodCoverage" type="xs:float">
            <xs:annotation>
              <xs:documentation>[Output] The method coverage, in range: 0% - 100%.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="LineCoverage" type="xs:float">
            <xs:annotation>
              <xs:documentation>[Output] The line coverage, in range: 0% - 100%.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="BranchCoverage" type="xs:float">
            <xs:annotation>
              <xs:documentation>[Output] The branch coverage, in range: 0% - 100%.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Heleonix.Build.Tasks.ReportUnit" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Generates HTML report using the ReportUnit tool.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="ReportUnitExePath" use="required">
            <xs:annotation>
              <xs:documentation>The ReportUnit executable path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="TestsResultsFilePath" use="required">
            <xs:annotation>
              <xs:documentation>The tests results file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ReportFilePath" use="required">
            <xs:annotation>
              <xs:documentation>The report file path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Heleonix.Build.Tasks.SvnLog" substitutionGroup="msb:Task">
    <xs:annotation>
      <xs:documentation>Retrieves the Svn log.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="msb:TaskType">
          <xs:attribute name="SvnExePath" use="required">
            <xs:annotation>
              <xs:documentation>The Svn executable path.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="RepositoryPath" use="required">
            <xs:annotation>
              <xs:documentation>The file or directory path to retrieve log for.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MaxCount" type="xs:long">
            <xs:annotation>
              <xs:documentation>The maximum count of commits to retrieve from the log.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="SinceDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date to start retrieval of commits from.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="UntilDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>The date to stop retrieval of commits on.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Commits">
            <xs:annotation>
              <xs:documentation>[Output] The commits.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <!--In-->
  <xs:element name="Hxb-In-Flow" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A name of a flow to run.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-In-Configuration" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A configuration, i.e. "Release", "Debug".</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-In-Overrides" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A file to override everything up to solution-specific definitions.</xs:documentation>
    </xs:annotation>
  </xs:element>

  <!--System-->
  <xs:element name="Hxb-System-CI" type="msb:Hxb-CIType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A type of continuous integration system.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-System-SCM" type="msb:Hxb-SCMType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A type of SCM.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-System-Workspace-Dir-Path" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A current folder, where build is executed. Usually, it's a folder where a repository was checked out.</xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="Hxb-System-Git" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>The Git executable.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-System-Svn" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>The Svn executable.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-System-Workspace" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>A current folder, where build is executed. Usually, it's a folder where a repository was checked out.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-System-FxCopCmd" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>A path to the FxCop cmd.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-System-NUnitConsole" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>A path to the NUnit console executable.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-System-ReportUnit" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>A path to the ReportUnit executable.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-System-OpenCoverConsole" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>A path to the OpenCover console executable.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-System-ReportGenerator" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>A path to the ReportGenerator executable.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-System-Nuget" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>A path to the Nuget executable.</xs:documentation>
    </xs:annotation>
  </xs:element>

  <!--Build-->
  <xs:element name="Hxb-Build-Version" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A version of the build, in format: [major.minor.build.revision].</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Build-Version-Informational" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>An informational version of the build, in a free format, i.e. [major.minor Beta].</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Build-Sln-Dir-Path" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A path to the directory of the solution to proceed with.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Build-Reports-Dir-Path" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A path to the reports directory of the solution to put tests reports, coverage reports etc.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Build-Sln-Path" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A path to the solution file to proceed with.</xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="Hxb-Build-Sln" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>A path to the solution file to proceed with.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Build-Sln-Dir" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>A path to the directory of the solution to proceed with.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Build-Reports-Dir" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>A path to the reports directory of the solution to put tests reports, coverage reports etc.</xs:documentation>
    </xs:annotation>
  </xs:element>

  <!--Targets-->
  <!--Hxb-Rebuild-->
  <xs:element name="Hxb-Rebuild-In-Output-RegEx" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A regular expression to filter outputs.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Rebuild-In-Output-Tests-RegEx" type="msb:StringPropertyType" substitutionGroup="msb:Property">
    <xs:annotation>
      <xs:documentation>A regular expression to filter outputs tests.</xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="Hxb-Rebuild-In-Delete" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>Files to delete during cleaning.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Rebuild-In-Clean-Dir" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>Directories to clean but not delete during cleaning.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Rebuild-In-Delete-Dir" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>Directories to delete during cleaning.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Rebuild-In-Snk" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>The file with public/private keys pair to sign assemblies.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Rebuild-Out-Output" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>Outputs of the target.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Hxb-Rebuild-Out-Output-Tests" type="msb:SimpleItemType" substitutionGroup="msb:Item">
    <xs:annotation>
      <xs:documentation>Tests outputs of the target.</xs:documentation>
    </xs:annotation>
  </xs:element>

  <!--Flows-->
</xs:schema>