<?xml version="1.0" encoding="utf-8"?>
<!--
The MIT License (MIT)

Copyright (c) 2015-present Heleonix - Hennadii Lutsyshyn

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="14.0">
  <Import Project="..\Heleonix.Build.Intellisense.proj" Condition="1 == 0"/>

  <!--Convention for target-specific properties and items which are defined at runtime-->
  <!--<Target Name="Hxb-[TargetName]-Before-Conventions" BeforeTargets="[TargetName]"></Target>-->

  <PropertyGroup>
    <Hxb-Setup-CI>Dev</Hxb-Setup-CI>
  </PropertyGroup>
  <PropertyGroup Condition="'$(GO_PIPELINE_COUNTER)' != ''">
    <Hxb-Setup-CI>GoCD</Hxb-Setup-CI>
    <Hxb-Setup-Workspace-Dir>$(MSBuildStartupDirectory)</Hxb-Setup-Workspace-Dir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(JENKINS_URL)' != ''">
    <Hxb-Setup-CI>Jenkins</Hxb-Setup-CI>
    <Hxb-Setup-Workspace-Dir>$(WORKSPACE)</Hxb-Setup-Workspace-Dir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TEAMCITY_VERSION)' != ''">
    <Hxb-Setup-CI>TeamCity</Hxb-Setup-CI>
    <Hxb-Setup-Workspace-Dir>$(system_agent_work_dir)</Hxb-Setup-Workspace-Dir>
  </PropertyGroup>
  <PropertyGroup>
    <Hxb-Setup-Sln-Flows>$(Hxb-Setup-Workspace-Dir)\Build.proj</Hxb-Setup-Sln-Flows>
  </PropertyGroup>

  <PropertyGroup>
    <Hxb-In-Configuration Condition="'$(Hxb-In-Configuration)' == ''">Release</Hxb-In-Configuration>
  </PropertyGroup>

  <Target Name="Hxb-Initialize-Before-Conventions" BeforeTargets="Hxb-Initialize">
    <PropertyGroup>
      <Hxb-Build-Sln-Dir>$(Hxb-Setup-Workspace-Dir)</Hxb-Build-Sln-Dir>
      <Hxb-Build-Reports-Dir>$(Hxb-Build-Sln-Dir)\Hxb-Reports\$(Hxb-In-Configuration)</Hxb-Build-Reports-Dir>
      <Hxb-Build-Reports-Dir Condition="'$(Hxb-In-Platform)' != ''">$(Hxb-Build-Reports-Dir)\$(Hxb-In-Platform)</Hxb-Build-Reports-Dir>
      <Hxb-Build-Deployments-Dir>$(Hxb-Build-Sln-Dir)\Hxb-Deployments\$(Hxb-In-Configuration)</Hxb-Build-Deployments-Dir>
      <Hxb-Build-Deployments-Dir Condition="'$(Hxb-In-Platform)' != ''">$(Hxb-Build-Deployments-Dir)\$(Hxb-In-Platform)</Hxb-Build-Deployments-Dir>
      <Hxb-Build-Verbosity>Normal</Hxb-Build-Verbosity>
    </PropertyGroup>

    <ItemGroup>
      <Hxb-Build-Sln Include="$(Hxb-Build-Sln-Dir)\*.sln"></Hxb-Build-Sln>
    </ItemGroup>

    <PropertyGroup>
      <Hxb-Build-Sln-File>@(Hxb-Build-Sln)</Hxb-Build-Sln-File>
      <Hxb-Build-Sln-Name>%(Hxb-Build-Sln.Filename)</Hxb-Build-Sln-Name>
    </PropertyGroup>

    <Heleonix.Build.Tasks.FileSystemSearch StartDir="$(Hxb-Build-Sln-Dir)"
                                           Direction="Up"
                                           Types="Directories"
                                           PathRegExp="\.git$">
      <Output TaskParameter="FoundDirs" ItemName="_Hxb-Build-VCS-Git-Dir"/>
    </Heleonix.Build.Tasks.FileSystemSearch>
    <Heleonix.Build.Tasks.FileSystemSearch StartDir="$(Hxb-Build-Sln-Dir)"
                                           Direction="Up"
                                           Types="Directories"
                                           PathRegExp="\.svn$">
      <Output TaskParameter="FoundDirs" ItemName="_Hxb-Build-VCS-Svn-Dir"/>
    </Heleonix.Build.Tasks.FileSystemSearch>

    <PropertyGroup>
      <Hxb-Build-VCS Condition="Exists('@(_Hxb-Build-VCS-Git-Dir)')">Git</Hxb-Build-VCS>
      <Hxb-Build-VCS Condition="Exists('@(_Hxb-Build-VCS-Svn-Dir)')">Svn</Hxb-Build-VCS>
    </PropertyGroup>

    <PropertyGroup>
      <Hxb-Build-Version Condition="$(Hxb-Setup-CI) == 'Jenkins'">$([System.Text.RegularExpressions.Regex]::Match('\d*\.\d*\.\d*$', '$(BRANCH_NAME)'))</Hxb-Build-Version>
      <Hxb-Build-Version Condition="$(Hxb-Setup-CI) == 'TeamCity'">$([System.Text.RegularExpressions.Regex]::Match('\d*\.\d*\.\d*$', '$(teamcity_build_branch)'))</Hxb-Build-Version>
      <Hxb-Build-Version Condition="$(Hxb-Setup-CI) == 'GoCD'">$([System.Text.RegularExpressions.Regex]::Match('\d*\.\d*\.\d*$', '$(GO_SCM_FB_CURRENT_BRANCH)'))</Hxb-Build-Version>
      <Hxb-Build-Version Condition="'$(Hxb-Build-Version)' == ''">1.0.0</Hxb-Build-Version>
      <Hxb-Build-Version Condition="'$(BUILD_NUMBER)' != ''">$(Hxb-Build-Version).$(BUILD_NUMBER)</Hxb-Build-Version>
      <Hxb-Build-Version Condition="'$(GO_PIPELINE_COUNTER)' != ''">$(Hxb-Build-Version).$(GO_PIPELINE_COUNTER)</Hxb-Build-Version>
      <Hxb-Build-Version Condition="'$(BUILD_NUMBER)' == '' And '$(GO_PIPELINE_COUNTER)' == ''">$(Hxb-Build-Version).0</Hxb-Build-Version>
      <Hxb-Build-Version-Informational>$(Hxb-Build-Version)</Hxb-Build-Version-Informational>
    </PropertyGroup>
  </Target>

  <Target Name="Hxb-Rebuild-Before-Conventions" BeforeTargets="Hxb-Rebuild">
    <ItemGroup>
      <Hxb-Rebuild-In-Delete-Dirs Include="$(Hxb-Build-Reports-Dir);$(Hxb-Build-Deployments-Dir)"/>
    </ItemGroup>
  </Target>

  <Target Name="_Hxb-Conventions-FindBinaries">
    <PropertyGroup>
      <_Hxb-Conventions-FindBinaries-SourcesTemplate>$(Hxb-Build-Sln-Dir)\Sources\$(Hxb-Build-Sln-Name)*\bin</_Hxb-Conventions-FindBinaries-SourcesTemplate>
      <_Hxb-Conventions-FindBinaries-SourcesTemplate Condition="'$(Hxb-In-Platform)' != ''">$(_Hxb-Conventions-FindBinaries-SourcesTemplate)\$(Hxb-In-Platform)</_Hxb-Conventions-FindBinaries-SourcesTemplate>
      <_Hxb-Conventions-FindBinaries-SourcesTemplate>$(_Hxb-Conventions-FindBinaries-SourcesTemplate)\$(Hxb-In-Configuration)\$(Hxb-Build-Sln-Name)*</_Hxb-Conventions-FindBinaries-SourcesTemplate>
    </PropertyGroup>
    <ItemGroup>
      <_Hxb-Conventions-FindBinaries-Sources Include="$(_Hxb-Conventions-FindBinaries-SourcesTemplate)"/>
    </ItemGroup>
    <Heleonix.Build.Tasks.ItemFilter Inputs="@(_Hxb-Conventions-FindBinaries-Sources)"
                                     RegExp="^.*\\(.+)\\bin\\.+\\\1(\.dll|\.exe)$">
      <Output TaskParameter="Outputs" ItemName="_Hxb-Conventions-FindBinaries-Out-Sources"/>
    </Heleonix.Build.Tasks.ItemFilter>

    <PropertyGroup>
      <_Hxb-Conventions-FindBinaries-TestsTemplate>$(Hxb-Build-Sln-Dir)\Tests\$(Hxb-Build-Sln-Name)*\bin</_Hxb-Conventions-FindBinaries-TestsTemplate>
      <_Hxb-Conventions-FindBinaries-TestsTemplate Condition="'$(Hxb-In-Platform)' != ''">$(_Hxb-Conventions-FindBinaries-TestsTemplate)\$(Hxb-In-Platform)</_Hxb-Conventions-FindBinaries-TestsTemplate>
      <_Hxb-Conventions-FindBinaries-TestsTemplate>$(_Hxb-Conventions-FindBinaries-TestsTemplate)\$(Hxb-In-Configuration)\$(Hxb-Build-Sln-Name)*</_Hxb-Conventions-FindBinaries-TestsTemplate>
    </PropertyGroup>
    <ItemGroup>
      <_Hxb-Conventions-FindBinaries-Tests Include="$(_Hxb-Conventions-FindBinaries-TestsTemplate)"/>
    </ItemGroup>
    <Heleonix.Build.Tasks.ItemFilter Inputs="@(_Hxb-Conventions-FindBinaries-Tests)"
                                     RegExp="^.*\\(.+)\\bin\\.+\\\1\.dll$">
      <Output TaskParameter="Outputs" ItemName="_Hxb-Conventions-FindBinaries-Out-Tests"/>
    </Heleonix.Build.Tasks.ItemFilter>
  </Target>

  <Target Name="Hxb-FxCop-Before-Conventions" DependsOnTargets="_Hxb-Conventions-FindBinaries" BeforeTargets="Hxb-FxCop">
    <PropertyGroup>
      <Hxb-FxCop-In-FailOn Condition="'$(Hxb-Setup-CI)' == 'Dev'">None</Hxb-FxCop-In-FailOn>
    </PropertyGroup>

    <ItemGroup>
      <Hxb-FxCop-In-Targets-FilesDirs Include="@(_Hxb-Conventions-FindBinaries-Out-Sources);@(_Hxb-Conventions-FindBinaries-Out-Tests)"/>
      <Hxb-FxCop-In-AnalysisResult Include="$(Hxb-Build-Reports-Dir)\FxCop\FxCop.xml"/>
      <Hxb-FxCop-In-Dependencies-Dirs Include="@(Hxb-FxCop-In-Targets-FilesDirs->DirectoryName())"/>
      <Hxb-FxCop-In-AnalysisResultsXsl Include="%(Hxb-System-FxCopCmd.RootDir)\%(Hxb-System-FxCopCmd.Directory)\Xml\FxCopReport.xsl"/>
    </ItemGroup>
  </Target>

  <Target Name="Hxb-NUnit-Before-Conventions" DependsOnTargets="_Hxb-Conventions-FindBinaries" BeforeTargets="Hxb-NUnit">
    <ItemGroup>
      <Hxb-NUnit-In-NUnitProjectOrTests Include="@(_Hxb-Conventions-FindBinaries-Out-Tests)"/>
      <Hxb-NUnit-In-ErrorsOutput Include="$(Hxb-Build-Reports-Dir)\NUnit\Errors.txt"/>
      <Hxb-NUnit-In-TestsOutput Include="$(Hxb-Build-Reports-Dir)\NUnit\Output.txt"/>
      <Hxb-NUnit-In-TestsResult Include="$(Hxb-Build-Reports-Dir)\NUnit\NUnit.xml"/>
    </ItemGroup>
  </Target>

  <Target Name="Hxb-OpenCover-Before-Conventions" DependsOnTargets="_Hxb-Conventions-FindBinaries" BeforeTargets="Hxb-OpenCover">
    <PropertyGroup>
      <Hxb-OpenCover-In-MinClassCoverage Condition="'$(Hxb-Setup-CI)' != 'Dev'">100</Hxb-OpenCover-In-MinClassCoverage>
      <Hxb-OpenCover-In-MinBranchCoverage Condition="'$(Hxb-Setup-CI)' != 'Dev'">100</Hxb-OpenCover-In-MinBranchCoverage>
      <Hxb-OpenCover-In-MinMethodCoverage Condition="'$(Hxb-Setup-CI)' != 'Dev'">100</Hxb-OpenCover-In-MinMethodCoverage>
      <Hxb-OpenCover-In-MinLineCoverage Condition="'$(Hxb-Setup-CI)' != 'Dev'">100</Hxb-OpenCover-In-MinLineCoverage>
      <Hxb-OpenCover-In-ShowUnvisited>true</Hxb-OpenCover-In-ShowUnvisited>
      <Hxb-OpenCover-In-ExcludeByAttributeFilters>*.ExcludeFromCodeCoverage*;*.CompilerGenerated*</Hxb-OpenCover-In-ExcludeByAttributeFilters>
      <Hxb-OpenCover-In-Filters>+[$(Hxb-Build-Sln-Name)*]* -[*.Tests]*</Hxb-OpenCover-In-Filters>
      <Hxb-OpenCover-In-Register>path64</Hxb-OpenCover-In-Register>
    </PropertyGroup>

    <ItemGroup>
      <Hxb-OpenCover-In-Target Include="@(Hxb-System-NUnitConsoleExe)">
        <Type>NUnit</Type>
        <NUnitProjectFileOrTestsFiles>@(_Hxb-Conventions-FindBinaries-Out-Tests)</NUnitProjectFileOrTestsFiles>
        <ErrorsOutputFile>$(Hxb-Build-Reports-Dir)\NUnit\Errors.txt</ErrorsOutputFile>
        <TestsOutputFile>$(Hxb-Build-Reports-Dir)\NUnit\Output.txt</TestsOutputFile>
        <TestsResultFile>$(Hxb-Build-Reports-Dir)\NUnit\NUnit.xml</TestsResultFile>
      </Hxb-OpenCover-In-Target>
      <Hxb-OpenCover-In-CoverageResult Include="$(Hxb-Build-Reports-Dir)\OpenCover\OpenCover.xml"/>
    </ItemGroup>
  </Target>

  <Target Name="Hxb-ReportGenerator-Before-Conventions" BeforeTargets="Hxb-ReportGenerator">
    <PropertyGroup>
      <Hxb-ReportGenerator-In-ReportTypes>Badges;Html</Hxb-ReportGenerator-In-ReportTypes>
    </PropertyGroup>

    <ItemGroup>
      <Hxb-ReportGenerator-In-Results Include="@(Hxb-OpenCover-In-CoverageResult)"/>
      <Hxb-ReportGenerator-In-Report-Dir Include="$(Hxb-Build-Reports-Dir)\ReportGenerator"/>
    </ItemGroup>
  </Target>

  <Target Name="Hxb-ReportUnit-Before-Conventions" BeforeTargets="Hxb-ReportUnit">
    <ItemGroup>
      <Hxb-ReportUnit-In-TestsResult Include="$(Hxb-Build-Reports-Dir)\NUnit\NUnit.xml"/>
      <Hxb-ReportUnit-In-Report Include="$(Hxb-Build-Reports-Dir)\ReportUnit\ReportUnit.html"/>
    </ItemGroup>
  </Target>

  <Target Name="Hxb-NugetDeploy-Before-Conventions" BeforeTargets="Hxb-NugetDeploy">
    <PropertyGroup>
      <Hxb-NugetDeploy-In-APIKey></Hxb-NugetDeploy-In-APIKey>
      <Hxb-NugetDeploy-In-IncludeReferencedProjects>true</Hxb-NugetDeploy-In-IncludeReferencedProjects>
      <Hxb-NugetDeploy-In-ExcludeEmptyDirectories>true</Hxb-NugetDeploy-In-ExcludeEmptyDirectories>
    </PropertyGroup>

    <ItemGroup>
      <Hxb-NugetDeploy-In-Nuspecs Include="$(Hxb-Build-Sln-Dir)\*.nuspec"/>
      <Hxb-NugetDeploy-In-Projects Include="$(Hxb-Build-Sln-Dir)\Sources\*\*.csproj"/>
      <Hxb-NugetDeploy-In-PackagesDir Include="$(Hxb-Build-Deployments-Dir)\Nuget"/>
    </ItemGroup>
  </Target>
</Project>