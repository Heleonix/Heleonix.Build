<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="Hx_OpenCover">
    <Message Text="> STARTING Hx_OpenCover" Importance="high"/>

    <Message Text="> 1/2: Creating the artifacts directory" Importance="high"/>
    <RemoveDir Directories="$(Hx_OpenCover_ArtifactsDir)"/>
    <MakeDir Directories="$(Hx_OpenCover_ArtifactsDir)"/>

    <MSBuild
      Condition="'@(Hx_OpenCover_Target)' == ''"
      Projects="$(MSBuildProjectFullPath)"
      Targets="Hx_Internal_NetFindTestBinaries"
      Properties="Hx_Internal_NetFindTestBinaries_StartDir=$(Hx_NetBuild_ArtifactsDir);Hx_Internal_NetFindTestBinaries_Configuration=$(Hx_In_Configuration)">
      <Output TaskParameter="TargetOutputs" ItemName="_Hx_OpenCover_TestBinaryFiles"/>
    </MSBuild>

    <ItemGroup Condition="'$(Hx_OpenCover_Filters)' == ''">
      <_Hx_OpenCover_TestBinaryFileNames Include="@(_Hx_OpenCover_TestBinaryFiles->'%(Filename)')" KeepDuplicates="false"/>
    </ItemGroup>

    <PropertyGroup>
      <Hx_OpenCover_ContinueOnError Condition="'$(Hx_OpenCover_ContinueOnError)' == ''">ErrorAndContinue</Hx_OpenCover_ContinueOnError>
      <Hx_OpenCover_Filters Condition="'$(Hx_OpenCover_Filters)' == ''">@(_Hx_OpenCover_TestBinaryFileNames->'+[%(Filename)]*', ' ')</Hx_OpenCover_Filters>
      <Hx_OpenCover_MinClassCoverage Condition="'$(Hx_OpenCover_MinClassCoverage)' == ''">100</Hx_OpenCover_MinClassCoverage>
      <Hx_OpenCover_MinBranchCoverage Condition="'$(Hx_OpenCover_MinBranchCoverage)' == ''">100</Hx_OpenCover_MinBranchCoverage>
      <Hx_OpenCover_MinMethodCoverage Condition="'$(Hx_OpenCover_MinMethodCoverage)' == ''">100</Hx_OpenCover_MinMethodCoverage>
      <Hx_OpenCover_MinLineCoverage Condition="'$(Hx_OpenCover_MinLineCoverage)' == ''">100</Hx_OpenCover_MinLineCoverage>
      <Hx_OpenCover_ShowUnvisited Condition="'$(Hx_OpenCover_ShowUnvisited)' == ''">true</Hx_OpenCover_ShowUnvisited>
      <Hx_OpenCover_ExcludeByAttributeFilters Condition="'$(Hx_OpenCover_ExcludeByAttributeFilters)' == ''">*.ExcludeFromCodeCoverage*;*.CompilerGenerated*</Hx_OpenCover_ExcludeByAttributeFilters>
      <Hx_OpenCover_Register Condition="'$(Hx_OpenCover_Register)' == ''">path64</Hx_OpenCover_Register>
    </PropertyGroup>

    <ItemGroup>
      <Hx_OpenCover_Target Condition="'@(Hx_OpenCover_Target)' == ''" Include="$(Hx_Sys_NUnitConsoleExe)">
        <Type>NUnit</Type>
        <NUnitProjectFileOrTestFiles>@(_Hx_OpenCover_TestBinaryFiles)</NUnitProjectFileOrTestFiles>
        <TestOutputFile>$(Hx_NUnit_ArtifactsDir)/Output.txt</TestOutputFile>
        <TestResultFile>$(Hx_NUnit_ArtifactsDir)/NUnit.xml</TestResultFile>
      </Hx_OpenCover_Target>
    </ItemGroup>

    <Message Text="> 2/2: Running OpenCover with %(Hx_OpenCover_Target.Type)" Importance="high"/>
    <Heleonix.Build.Tasks.OpenCover
      ContinueOnError="$(Hx_OpenCover_ContinueOnError)"
      OpenCoverExe="$(Hx_Sys_OpenCoverConsoleExe)"
      CoverageResultFile="$(Hx_OpenCover_ArtifactsDir)/OpenCover.xml"
      ExcludeByAttributeFilters="$(Hx_OpenCover_ExcludeByAttributeFilters)"
      Filters="$(Hx_OpenCover_Filters)"
      Target="@(Hx_OpenCover_Target)"
      PdbSearchDirs="@(Hx_OpenCover_PdbSearchDirs)"
      ExcludeDirs="@(Hx_OpenCover_ExcludeDirs)"
      MinClassCoverage="$(Hx_OpenCover_MinClassCoverage)"
      MinMethodCoverage="$(Hx_OpenCover_MinMethodCoverage)"
      MinBranchCoverage="$(Hx_OpenCover_MinBranchCoverage)"
      MinLineCoverage="$(Hx_OpenCover_MinLineCoverage)"
      MaxVisitCount="$(Hx_OpenCover_MaxVisitCount)"
      ShowUnvisited="$(Hx_OpenCover_ShowUnvisited)"
      Register="$(Hx_OpenCover_Register)"
      FilePathReplacement="$(Hx_OpenCover_FilePathReplacement)"
      FilePathRegExp="$(Hx_OpenCover_FilePathRegExp)"
      FilePathRegExpOptions="$(Hx_OpenCover_FilePathRegExpOptions)"
      WorkingDir="$(Hx_WS_Dir)"/>

    <Message Text="> DONE Hx_OpenCover" Importance="high"/>

    <OnError ExecuteTargets="Hx_OnError"/>
  </Target>
</Project>