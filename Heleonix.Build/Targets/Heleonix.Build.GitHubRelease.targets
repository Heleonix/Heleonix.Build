<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="Hx_GitHubRelease" AfterTargets="Hx_Net_GitHubRelease">
    <Message Text="> STARTING..."/>

    <PropertyGroup>
      <Hx_GitHubRelease_TagSource Condition="'$(Hx_GitHubRelease_TagSource)' == ''">master</Hx_GitHubRelease_TagSource>
    </PropertyGroup>

    <Exec
      Condition="'$(Hx_GitHubRelease_OwnerName)' == '' Or '$(Hx_GitHubRelease_RepositoryName)' == ''"
      Command="&quot;@(Hx_System_GitExe)&quot; config --get remote.origin.url"
      ConsoleToMsBuild="true"
      WorkingDirectory="$(Hx_WS_Dir)">
      <Output TaskParameter="ConsoleOutput" PropertyName="_Hx_GitHubRelease_RepositoryUrl" />
    </Exec>
    <!--
        Extracts owner and repository from urls in the following formats:
        https://github.com/Heleonix/Heleonix.Build.git
        git@github.com:Heleonix/Heleonix.Build.git
    -->
    <PropertyGroup Condition="'$(_Hx_GitHubRelease_RepositoryUrl)' != ''">
      <Hx_GitHubRelease_RepositoryName>$([System.Text.RegularExpressions.Regex]::Match($(_Hx_GitHubRelease_RepositoryUrl), '(?&lt;=/)[^/]+(?=.git$)'))</Hx_GitHubRelease_RepositoryName>
      <Hx_GitHubRelease_OwnerName>$([System.Text.RegularExpressions.Regex]::Match($(_Hx_GitHubRelease_RepositoryUrl), '[^/:]+(?=/[^/]+.git$)'))</Hx_GitHubRelease_OwnerName>
    </PropertyGroup>

    <PropertyGroup>
      <_Hx_GitHubRelease_PrereleaseSuffix>$([System.Text.RegularExpressions.Regex]::Match($(Hx_GitHubRelease_TagName), '[-+][a-zA-Z0-9.]+'))</_Hx_GitHubRelease_PrereleaseSuffix>
      <_Hx_GitHubRelease_IsPrerelease Condition="'$(_Hx_GitHubRelease_PrereleaseSuffix)' != ''">true</_Hx_GitHubRelease_IsPrerelease>
    </PropertyGroup>

    <Message Text="> 1/1: Creating a release for $(Hx_GitHubRelease_OwnerName)/$(Hx_GitHubRelease_RepositoryName)"/>
    <Heleonix.Build.Tasks.GitHubRelease
      ReleasesApiUrl="$(Hx_System_GitHubAPIUrl)/repos/$(Hx_GitHubRelease_OwnerName)/$(Hx_GitHubRelease_RepositoryName)/releases"
      Token="$(Hx_GitHubRelease_Token)"
      UserAgent="$(Hx_GitHubRelease_OwnerName)/$(Hx_GitHubRelease_RepositoryName)"
      TagName="$(Hx_GitHubRelease_TagName)"
      Name="$(Hx_GitHubRelease_TagName)"
      TagSource="$(Hx_GitHubRelease_TagSource)"
      IsPrerelease="$(_Hx_GitHubRelease_IsPrerelease)"
      IsDraft="false"/>

    <Message Text="> DONE!"/>

    <OnError ExecuteTargets="Hx_OnError"/>
  </Target>
</Project>